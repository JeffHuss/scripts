---
- name: Install Docker on Ubuntu hosts using convenience script
  hosts: docker_vm_hosts
  become: yes
  vars:
    users_to_add:
      - "{{ ansible_user }}"
  
  tasks:
    - name: Update apt package cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install prerequisites
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - python3-pip
        state: present

    - name: Download Docker installation script
      ansible.builtin.get_url:
        url: https://get.docker.com
        dest: /tmp/get-docker.sh
        mode: '0755'

    - name: Execute Docker installation script
      ansible.builtin.shell: sh /tmp/get-docker.sh
      register: docker_install
      changed_when: docker_install.rc == 0
      failed_when: docker_install.rc != 0
      # Don't skip in check mode if we just want to see what commands would run
      check_mode: no
      when: not ansible_check_mode or ansible_check_mode is defined and not ansible_check_mode

    # Check if Docker is installed before trying to manage the service
    - name: Check if Docker service exists
      ansible.builtin.stat:
        path: /usr/bin/docker
      register: docker_binary
      check_mode: no  # Always run this check

    - name: Start and enable Docker service
      ansible.builtin.service:
        name: docker
        enabled: yes
        state: started
      when: docker_binary.stat.exists or not ansible_check_mode

    - name: Install Docker Python modules
      ansible.builtin.pip:
        name:
          - docker
          - docker-compose
      when: docker_binary.stat.exists or not ansible_check_mode

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ item }}"
        groups: docker
        append: yes
      with_items: "{{ users_to_add }}"
      when: docker_binary.stat.exists or not ansible_check_mode

    # - name: Get running containers
    #   ansible.builtin.command: docker ps
    #   register: running_containers
    #   changed_when: false
    #   failed_when: false
    #   when: docker_binary.stat.exists or not ansible_check_mode

    # - name: Display running containers
    #   ansible.builtin.debug:
    #     var: running_containers.stdout_lines
    #   when: docker_binary.stat.exists or not ansible_check_mode
